from aiogram.types import (InlineKeyboardButton, InlineKeyboardMarkup,
                           KeyboardButton, ReplyKeyboardMarkup,
                           WebAppInfo)
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app.pagination import add_pagination_buttons, create_paginated_keyboard


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.

main_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –∫–ª–∏–Ω–∏–∫—É üìÖ", callback_data="enroll")],
    [InlineKeyboardButton(text="–ü—Ä–∞–π—Å-–ª–∏—Å—Ç üìÉ", callback_data="price_list")],
    [InlineKeyboardButton(text="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É ‚ùî", callback_data="ask_doc")]
])

back_to_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†", callback_data="to_main")]
])

back = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]
])

stop_fsm = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏ ‚ùå", callback_data="cancel")]
])


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é –∑–∞–ø–∏—Å–∏.
enrolling = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ üìû", callback_data="call_me")],
    [InlineKeyboardButton(text="–û–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å—å üì±", web_app=WebAppInfo(url='https://example.com/'))],
    [InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†", callback_data="to_main")]
])

branch = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="–ù–∞ [—É–ª–∏—Ü–∞ 1]")],
    [KeyboardButton(text="–ù–∞ [—É–ª–∏—Ü–∞ 2]")]
]) 



# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞. –ü–∞–≥–∏–Ω–∞—Ü–∏—è.

def create_category_keyboard(categories, page: int, total_pages: int):
    """
    Create a paginated keyboard for categories.
    """
    return create_paginated_keyboard(
        items=categories,
        page=page,
        total_pages=total_pages,
        prefix="cat",
        back_callback=None,  # –ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, —Ç.–∫. –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é - –≥–ª–∞–≤–Ω–æ–µ
        to_main_callback="to_main"
    )

def create_item_keyboard(page: int, total_pages: int, category_id: int = None):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É—Å–ª—É–≥ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.

    :param page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.
    :param total_pages: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü.
    :param category_id: ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
    :return: InlineKeyboardMarkup.
    """
    builder = InlineKeyboardBuilder()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    add_pagination_buttons(builder, page, total_pages, "item", category_id)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    if category_id:
        builder.button(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data=f"back_to_categories_{category_id}")

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    builder.button(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†", callback_data="to_main")

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
    builder.adjust(2, 1)
    return builder.as_markup()


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É
ask_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –≤–æ–ø—Ä–æ—Å üìù", callback_data="start_ask")],
    [InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†", callback_data="to_main")]
])

ask_kind_of_specialist = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥—É")],
    [KeyboardButton(text="–¢–µ—Ä–∞–ø–µ–≤—Ç—É")],
    [KeyboardButton(text="–û—Ä—Ç–æ–ø–µ–¥—É")],
    [KeyboardButton(text="–ù–µ –∑–Ω–∞—é –∫–æ–º—É")], 
    [KeyboardButton(text="–û—Ç–º–µ–Ω–∞ ‚ùå")]
], one_time_keyboard=True)


ask_kind_of_pet = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="–ö–æ—à–∫–∞ üêà")],
    [KeyboardButton(text="–°–æ–±–∞–∫–∞ ü¶Æ")],
    [KeyboardButton(text="–î—Ä—É–≥–æ–µ ü™ø")], 
    [KeyboardButton(text="–û—Ç–º–µ–Ω–∞ ‚ùå")]
], one_time_keyboard=True)

get_ask = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ", callback_data="push")],
    [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏ ‚ùå", callback_data="cancel")]
])
