from aiogram.utils.keyboard import InlineKeyboardBuilder

def add_pagination_buttons(builder, page: int, total_pages: int, prefix: str, category_id: int = None):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.

    Args:
        builder (InlineKeyboardBuilder): –û–±—ä–µ–∫—Ç –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
        page (int): –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.
        total_pages (int): –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü.
        prefix (str): –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback_data (–Ω–∞–ø—Ä–∏–º–µ—Ä, "cat", "item").
        category_id (int, optional): ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è callback_data.

    Returns:
        None: –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω—è–µ—Ç –æ–±—ä–µ–∫—Ç builder, –¥–æ–±–∞–≤–ª—è—è –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.

    """

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞, –Ω–æ –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–∞–ª—å—à–µ –Ω–µ—Ç, 
    # —Ç–æ –∏–º–µ–µ—Ç –¥—Ä—É–≥–æ–π callback data
    if page > 1:
        callback_data = f"{prefix}_page_{page - 1}"
        if category_id is not None:
            callback_data += f"_{category_id}"
        builder.button(text="‚¨ÖÔ∏è", callback_data=callback_data)
    elif page == 1:
        builder.button(text="‚¨ÖÔ∏è", callback_data="on_first_page")

    # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞, –Ω–æ –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–∞–ª—å—à–µ –Ω–µ—Ç, 
    # —Ç–æ –∏–º–µ–µ—Ç –¥—Ä—É–≥–æ–π callback data
    if page < total_pages:
        callback_data = f"{prefix}_page_{page + 1}"
        if category_id is not None:
            callback_data += f"_{category_id}"
        builder.button(text="‚û°Ô∏è", callback_data=callback_data)
    elif page == total_pages:
        builder.button(text="‚û°Ô∏è", callback_data="on_last_page")

def create_paginated_keyboard(items, page: int, total_pages: int, prefix: str, back_callback: str = None, to_main_callback: str = "to_main"):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.

    –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏.
    –î–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞–∑–∞–¥, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.
    –î–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.

    Args:
        items (list): –°–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
        page (int): –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.
        total_pages (int): –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü.
        prefix (str): –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback_data (–Ω–∞–ø—Ä–∏–º–µ—Ä, "cat", "item").
        back_callback (str, optional): Callback_data –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥". –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è.
        to_main_callback (str): Callback_data –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é". –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é "to_main".

    Returns:
        InlineKeyboardMarkup: –û–±—ä–µ–∫—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.
    """
    builder = InlineKeyboardBuilder()

    for item in items:
        builder.button(text=item.name, callback_data=f"{prefix}_{item.id}")

    add_pagination_buttons(builder, page, total_pages, prefix)

    if back_callback:
        builder.button(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data=back_callback)

    builder.button(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†", callback_data=to_main_callback)

    builder.adjust(1, 1, 1, 1, 2, 2, 2, 1) # –ü–æ–¥–±–∏—Ä–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    return builder.as_markup()


    